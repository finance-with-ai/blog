---
title: "Capital Budgeting"
author: "Kerry Back"
date: "2025-05-20"
draft: false
categories: []
image: "capital-budgeting.png"  # You can add an image later
---

![](capital-budgeting.png){width=40% fig-align="center"}

Spreadsheets are perfectly suited for capital budgeting exercises.  They involve a minimal amount of data (data = assumptions mostly) and only basic arithmetic, and we would like to view multiple tables (balance sheet, income statement, and cash flows) simultaneously, which we can do in a spreadsheet but not easily in python.  What can AI add?

I don't think there is a clear-cut answer to that question.  It is worthwhile for students to explore the question, with guidance, and then discuss whether it adds value, where it adds value, and what additional value it might add in the future as models improve.  A good starting point is to provide a basic spreadsheet template, which students likely already have from prior classes (here's [an example]()) and then ask students to apply it to a specific situation. I like the [Sneaker case](https://hbsp.harvard.edu/product/BAB166-PDF-ENG).  It has all of the normal features, but no tricky questions like what cost to assign to pre-existing equipment that is surplus now but might have other uses in the future.  

We can ask students to chat with Julius, or whatever AI system they use, as they build out the balance sheet, income statement, and cash flow forecasts.  And, we can ask them to ask Julius to build out a python model in parallel.  

When developing the models, it is fruitful to tell Julius what the desired table layouts are and to ask Julius to show the tables each time they are revised (and to ask it to transpose its tables when it shows them, because the natural inclination in python in assigning columns and rows is the opposite of what we normally do in spreadsheets).  If there are discrepancies between the spreadsheet and python models, then students can ask Julius to analyze and reconcile them.  The error may frequently lie with the LLM, because it has misunderstood something or made an incorrect guess about something.

Once the model is built in the spreadsheet and in python, it is time to turn to sensitivity analysis.  It is in this part of the process that AI is likely to be of the most use.  "AI + coding" can easily produce pivot tables and charts and help interpret the results.

This should be a multi-day exercise, I think, mostly done in class so students can get assistance, help each other, vent frustrations, etc. At the end, the discusson about the value of AI should be interesting.  Students may conclude that AI is of no value or requires too much extra time for the value it adds.  This itself is a useful lesson.  And, they will have gained additional practice in capital budgeting, which cannot be a bad thing.  I think it is likely that most students  will have found the collaborative aspect of working with AI valuable (though possibly too time consuming), if only because it reinforced that they were doing the right things all along.  It is generally true that, as they say, two heads are better than one, and AI is an always available and [infinitely patient](https://www.oneusefulthing.org/p/getting-started-with-ai-good-enough) partner in whatever work we are doing.  
---

*First published on [finance-with-ai.org](https://finance-with-ai.org)* <br>
*Also on substack at [kerryback.substack.com](https://kerryback.substack.com)*